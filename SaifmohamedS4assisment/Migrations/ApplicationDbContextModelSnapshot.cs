// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SaifmohamedS4assisment.data;

#nullable disable

namespace SaifmohamedS4assisment.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DirectorMovie", b =>
                {
                    b.Property<int>("MoviesId")
                        .HasColumnType("int");

                    b.Property<int>("directorsId")
                        .HasColumnType("int");

                    b.HasKey("MoviesId", "directorsId");

                    b.HasIndex("directorsId");

                    b.ToTable("DirectorMovie");
                });

            modelBuilder.Entity("SaifmohamedS4assisment.models.Catigory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("SaifmohamedS4assisment.models.Cinema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlaceHolder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cinemas");
                });

            modelBuilder.Entity("SaifmohamedS4assisment.models.Director", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NationaltyId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NationaltyId")
                        .IsUnique();

                    b.ToTable("Directors");
                });

            modelBuilder.Entity("SaifmohamedS4assisment.models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CatigoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CinemaId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("publishyear")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CatigoryId");

                    b.HasIndex("CinemaId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("SaifmohamedS4assisment.models.Nationality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Nationalities");
                });

            modelBuilder.Entity("DirectorMovie", b =>
                {
                    b.HasOne("SaifmohamedS4assisment.models.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SaifmohamedS4assisment.models.Director", null)
                        .WithMany()
                        .HasForeignKey("directorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SaifmohamedS4assisment.models.Director", b =>
                {
                    b.HasOne("SaifmohamedS4assisment.models.Nationality", "Nationality")
                        .WithOne("Director")
                        .HasForeignKey("SaifmohamedS4assisment.models.Director", "NationaltyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nationality");
                });

            modelBuilder.Entity("SaifmohamedS4assisment.models.Movie", b =>
                {
                    b.HasOne("SaifmohamedS4assisment.models.Catigory", "Catigory")
                        .WithMany("Movies")
                        .HasForeignKey("CatigoryId");

                    b.HasOne("SaifmohamedS4assisment.models.Cinema", "Cinema")
                        .WithMany("Movies")
                        .HasForeignKey("CinemaId");

                    b.Navigation("Catigory");

                    b.Navigation("Cinema");
                });

            modelBuilder.Entity("SaifmohamedS4assisment.models.Catigory", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("SaifmohamedS4assisment.models.Cinema", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("SaifmohamedS4assisment.models.Nationality", b =>
                {
                    b.Navigation("Director");
                });
#pragma warning restore 612, 618
        }
    }
}
